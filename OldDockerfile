#Depending on the operating system of the host machines(s) that will build or run the containers, the image specified in the FROM statement may need to be changed.
#For more information, please see https://aka.ms/containercompat

FROM stefanscherer/node-windows as node

WORKDIR /Fllight_Search_App
COPY package.json /Fllight_Search_App/package.json
RUN npm config set strict-ssl false
RUN npm config set registry https://registry.npmjs.org/ 
#RUN npm install
RUN npm --proxy install -g @angular/cli@6
COPY . var/Fllight_Search_App
CMD ng serve --host 0.0.0.0


#FROM nginx:1.15.8-alpine
#COPY --from=node /wwwroot/Client_App/dist /usr/share/nginx/html
#COPY --from=node /nginx.conf /etc/nginx/conf.d/default.conf
## Remove default Nginx website
#RUN rm -rf /usr/share/nginx/html/*
#
#COPY ./dev/nginx.conf /etc/nginx/nginx.conf
#
#COPY --from=build  /usr/angular-workdir/dist/angular-docker /usr/share/nginx/html
#WORKDIR /src
#COPY ["Fllight_Search_App/Fllight_Search_App.csproj", "Fllight_Search_App/"]
#RUN dotnet restore "Fllight_Search_App/Fllight_Search_App.csproj"
#COPY . .
#WORKDIR "/src/Fllight_Search_App"
#RUN dotnet build "Fllight_Search_App.csproj" -c Release -o /app/build
#
#FROM build AS publish
#RUN dotnet publish "Fllight_Search_App.csproj" -c Release -o /app/publish
#
#FROM base AS final
#WORKDIR /app
#COPY --from=publish /app/publish .
#ENTRYPOINT ["dotnet", "Fllight_Search_App.dll"]
#
